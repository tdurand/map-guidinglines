parcelRequire=function(e,r,t,n){var i,o="function"==typeof parcelRequire&&parcelRequire,u="function"==typeof require&&require;function f(t,n){if(!r[t]){if(!e[t]){var i="function"==typeof parcelRequire&&parcelRequire;if(!n&&i)return i(t,!0);if(o)return o(t,!0);if(u&&"string"==typeof t)return u(t);var c=new Error("Cannot find module '"+t+"'");throw c.code="MODULE_NOT_FOUND",c}p.resolve=function(r){return e[t][1][r]||r},p.cache={};var l=r[t]=new f.Module(t);e[t][0].call(l.exports,p,l,l.exports,this)}return r[t].exports;function p(e){return f(p.resolve(e))}}f.isParcelRequire=!0,f.Module=function(e){this.id=e,this.bundle=f,this.exports={}},f.modules=e,f.cache=r,f.parent=o,f.register=function(r,t){e[r]=[function(e,r){r.exports=t},{}]};for(var c=0;c<t.length;c++)try{f(t[c])}catch(e){i||(i=e)}if(t.length){var l=f(t[t.length-1]);"object"==typeof exports&&"undefined"!=typeof module?module.exports=l:"function"==typeof define&&define.amd?define(function(){return l}):n&&(this[n]=l)}if(parcelRequire=f,i)throw i;return f}({"il2D":[function(require,module,exports) {
"use strict";function e(e,r,t){void 0===t&&(t={});var o={type:"Feature"};return(0===t.id||t.id)&&(o.id=t.id),t.bbox&&(o.bbox=t.bbox),o.properties=r||{},o.geometry=e,o}function r(e,r,o){switch(void 0===o&&(o={}),e){case"Point":return t(r).geometry;case"LineString":return s(r).geometry;case"Polygon":return n(r).geometry;case"MultiPoint":return m(r).geometry;case"MultiLineString":return d(r).geometry;case"MultiPolygon":return c(r).geometry;default:throw new Error(e+" is invalid")}}function t(r,t,o){return void 0===o&&(o={}),e({type:"Point",coordinates:r},t,o)}function o(e,r,o){return void 0===o&&(o={}),u(e.map(function(e){return t(e,r)}),o)}function n(r,t,o){void 0===o&&(o={});for(var n=0,i=r;n<i.length;n++){var s=i[n];if(s.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var a=0;a<s[s.length-1].length;a++)if(s[s.length-1][a]!==s[0][a])throw new Error("First and last Position are not equivalent.")}return e({type:"Polygon",coordinates:r},t,o)}function i(e,r,t){return void 0===t&&(t={}),u(e.map(function(e){return n(e,r)}),t)}function s(r,t,o){if(void 0===o&&(o={}),r.length<2)throw new Error("coordinates must be an array of two or more positions");return e({type:"LineString",coordinates:r},t,o)}function a(e,r,t){return void 0===t&&(t={}),u(e.map(function(e){return s(e,r)}),t)}function u(e,r){void 0===r&&(r={});var t={type:"FeatureCollection"};return r.id&&(t.id=r.id),r.bbox&&(t.bbox=r.bbox),t.features=e,t}function d(r,t,o){return void 0===o&&(o={}),e({type:"MultiLineString",coordinates:r},t,o)}function m(r,t,o){return void 0===o&&(o={}),e({type:"MultiPoint",coordinates:r},t,o)}function c(r,t,o){return void 0===o&&(o={}),e({type:"MultiPolygon",coordinates:r},t,o)}function l(r,t,o){return void 0===o&&(o={}),e({type:"GeometryCollection",geometries:r},t,o)}function h(e,r){if(void 0===r&&(r=0),r&&!(r>=0))throw new Error("precision must be a positive number");var t=Math.pow(10,r||0);return Math.round(e*t)/t}function p(e,r){void 0===r&&(r="kilometers");var t=exports.factors[r];if(!t)throw new Error(r+" units is invalid");return e*t}function f(e,r){void 0===r&&(r="kilometers");var t=exports.factors[r];if(!t)throw new Error(r+" units is invalid");return e/t}function x(e,r){return w(f(e,r))}function g(e){var r=e%360;return r<0&&(r+=360),r}function w(e){return 180*(e%(2*Math.PI))/Math.PI}function b(e){return e%360*Math.PI/180}function v(e,r,t){if(void 0===r&&(r="kilometers"),void 0===t&&(t="kilometers"),!(e>=0))throw new Error("length must be a positive number");return p(f(e,r),t)}function y(e,r,t){if(void 0===r&&(r="meters"),void 0===t&&(t="kilometers"),!(e>=0))throw new Error("area must be a positive number");var o=exports.areaFactors[r];if(!o)throw new Error("invalid original units");var n=exports.areaFactors[t];if(!n)throw new Error("invalid final units");return e/o*n}function E(e){return!isNaN(e)&&null!==e&&!Array.isArray(e)&&!/^\s*$/.test(e)}function R(e){return!!e&&e.constructor===Object}function P(e){if(!e)throw new Error("bbox is required");if(!Array.isArray(e))throw new Error("bbox must be an Array");if(4!==e.length&&6!==e.length)throw new Error("bbox must be an Array of 4 or 6 numbers");e.forEach(function(e){if(!E(e))throw new Error("bbox must only contain numbers")})}function T(e){if(!e)throw new Error("id is required");if(-1===["string","number"].indexOf(typeof e))throw new Error("id must be a number or a string")}function M(){throw new Error("method has been renamed to `radiansToDegrees`")}function k(){throw new Error("method has been renamed to `degreesToRadians`")}function A(){throw new Error("method has been renamed to `lengthToDegrees`")}function L(){throw new Error("method has been renamed to `lengthToRadians`")}function D(){throw new Error("method has been renamed to `radiansToLength`")}function F(){throw new Error("method has been renamed to `bearingToAzimuth`")}function S(){throw new Error("method has been renamed to `convertLength`")}Object.defineProperty(exports,"__esModule",{value:!0}),exports.earthRadius=6371008.8,exports.factors={centimeters:100*exports.earthRadius,centimetres:100*exports.earthRadius,degrees:exports.earthRadius/111325,feet:3.28084*exports.earthRadius,inches:39.37*exports.earthRadius,kilometers:exports.earthRadius/1e3,kilometres:exports.earthRadius/1e3,meters:exports.earthRadius,metres:exports.earthRadius,miles:exports.earthRadius/1609.344,millimeters:1e3*exports.earthRadius,millimetres:1e3*exports.earthRadius,nauticalmiles:exports.earthRadius/1852,radians:1,yards:exports.earthRadius/1.0936},exports.unitsFactors={centimeters:100,centimetres:100,degrees:1/111325,feet:3.28084,inches:39.37,kilometers:.001,kilometres:.001,meters:1,metres:1,miles:1/1609.344,millimeters:1e3,millimetres:1e3,nauticalmiles:1/1852,radians:1/exports.earthRadius,yards:1/1.0936},exports.areaFactors={acres:247105e-9,centimeters:1e4,centimetres:1e4,feet:10.763910417,inches:1550.003100006,kilometers:1e-6,kilometres:1e-6,meters:1,metres:1,miles:3.86e-7,millimeters:1e6,millimetres:1e6,yards:1.195990046},exports.feature=e,exports.geometry=r,exports.point=t,exports.points=o,exports.polygon=n,exports.polygons=i,exports.lineString=s,exports.lineStrings=a,exports.featureCollection=u,exports.multiLineString=d,exports.multiPoint=m,exports.multiPolygon=c,exports.geometryCollection=l,exports.round=h,exports.radiansToLength=p,exports.lengthToRadians=f,exports.lengthToDegrees=x,exports.bearingToAzimuth=g,exports.radiansToDegrees=w,exports.degreesToRadians=b,exports.convertLength=v,exports.convertArea=y,exports.isNumber=E,exports.isObject=R,exports.validateBBox=P,exports.validateId=T,exports.radians2degrees=M,exports.degrees2radians=k,exports.distanceToDegrees=A,exports.distanceToRadians=L,exports.radiansToDistance=D,exports.bearingToAngle=F,exports.convertDistance=S;
},{}],"ZA2/":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("@turf/helpers");function r(e){if(!e)throw new Error("coord is required");if(!Array.isArray(e)){if("Feature"===e.type&&null!==e.geometry&&"Point"===e.geometry.type)return e.geometry.coordinates;if("Point"===e.type)return e.coordinates}if(Array.isArray(e)&&e.length>=2&&!Array.isArray(e[0])&&!Array.isArray(e[1]))return e;throw new Error("coord must be GeoJSON Point or an Array of numbers")}function t(e){if(Array.isArray(e))return e;if("Feature"===e.type){if(null!==e.geometry)return e.geometry.coordinates}else if(e.coordinates)return e.coordinates;throw new Error("coords must be GeoJSON Feature, Geometry Object or an Array")}function o(r){if(r.length>1&&e.isNumber(r[0])&&e.isNumber(r[1]))return!0;if(Array.isArray(r[0])&&r[0].length)return o(r[0]);throw new Error("coordinates must only contain numbers")}function n(e,r,t){if(!r||!t)throw new Error("type and name required");if(!e||e.type!==r)throw new Error("Invalid input to "+t+": must be a "+r+", given "+e.type)}function i(e,r,t){if(!e)throw new Error("No feature passed");if(!t)throw new Error(".featureOf() requires a name");if(!e||"Feature"!==e.type||!e.geometry)throw new Error("Invalid input to "+t+", Feature with geometry required");if(!e.geometry||e.geometry.type!==r)throw new Error("Invalid input to "+t+": must be a "+r+", given "+e.geometry.type)}function u(e,r,t){if(!e)throw new Error("No featureCollection passed");if(!t)throw new Error(".collectionOf() requires a name");if(!e||"FeatureCollection"!==e.type)throw new Error("Invalid input to "+t+", FeatureCollection required");for(var o=0,n=e.features;o<n.length;o++){var i=n[o];if(!i||"Feature"!==i.type||!i.geometry)throw new Error("Invalid input to "+t+", Feature with geometry required");if(!i.geometry||i.geometry.type!==r)throw new Error("Invalid input to "+t+": must be a "+r+", given "+i.geometry.type)}}function a(e){return"Feature"===e.type?e.geometry:e}function y(e,r){return"FeatureCollection"===e.type?"FeatureCollection":"GeometryCollection"===e.type?"GeometryCollection":"Feature"===e.type&&null!==e.geometry?e.geometry.type:e.type}exports.getCoord=r,exports.getCoords=t,exports.containsNumber=o,exports.geojsonType=n,exports.featureOf=i,exports.collectionOf=u,exports.getGeom=a,exports.getType=y;
},{"@turf/helpers":"il2D"}],"MNc+":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("@turf/helpers");function t(e,r,n){if(null!==e)for(var o,i,a,u,l,s,c,g,f=0,p=0,h=e.type,y="FeatureCollection"===h,d="Feature"===h,v=y?e.features.length:1,P=0;P<v;P++){l=(g=!!(c=y?e.features[P].geometry:d?e.geometry:e)&&"GeometryCollection"===c.type)?c.geometries.length:1;for(var m=0;m<l;m++){var w=0,x=0;if(null!==(u=g?c.geometries[m]:c)){s=u.coordinates;var b=u.type;switch(f=!n||"Polygon"!==b&&"MultiPolygon"!==b?0:1,b){case null:break;case"Point":if(!1===r(s,p,P,w,x))return!1;p++,w++;break;case"LineString":case"MultiPoint":for(o=0;o<s.length;o++){if(!1===r(s[o],p,P,w,x))return!1;p++,"MultiPoint"===b&&w++}"LineString"===b&&w++;break;case"Polygon":case"MultiLineString":for(o=0;o<s.length;o++){for(i=0;i<s[o].length-f;i++){if(!1===r(s[o][i],p,P,w,x))return!1;p++}"MultiLineString"===b&&w++,"Polygon"===b&&x++}"Polygon"===b&&w++;break;case"MultiPolygon":for(o=0;o<s.length;o++){for(x=0,i=0;i<s[o].length;i++){for(a=0;a<s[o][i].length-f;a++){if(!1===r(s[o][i][a],p,P,w,x))return!1;p++}x++}w++}break;case"GeometryCollection":for(o=0;o<u.geometries.length;o++)if(!1===t(u.geometries[o],r,n))return!1;break;default:throw new Error("Unknown Geometry Type")}}}}}function r(e,r,n,o){var i=n;return t(e,function(e,t,o,a,u){i=0===t&&void 0===n?e:r(i,e,t,o,a,u)},o),i}function n(e,t){var r;switch(e.type){case"FeatureCollection":for(r=0;r<e.features.length&&!1!==t(e.features[r].properties,r);r++);break;case"Feature":t(e.properties,0)}}function o(e,t,r){var o=r;return n(e,function(e,n){o=0===n&&void 0===r?e:t(o,e,n)}),o}function i(e,t){if("Feature"===e.type)t(e,0);else if("FeatureCollection"===e.type)for(var r=0;r<e.features.length&&!1!==t(e.features[r],r);r++);}function a(e,t,r){var n=r;return i(e,function(e,o){n=0===o&&void 0===r?e:t(n,e,o)}),n}function u(e){var r=[];return t(e,function(e){r.push(e)}),r}function l(e,t){var r,n,o,i,a,u,l,s,c,g,f=0,p="FeatureCollection"===e.type,h="Feature"===e.type,y=p?e.features.length:1;for(r=0;r<y;r++){for(u=p?e.features[r].geometry:h?e.geometry:e,s=p?e.features[r].properties:h?e.properties:{},c=p?e.features[r].bbox:h?e.bbox:void 0,g=p?e.features[r].id:h?e.id:void 0,a=(l=!!u&&"GeometryCollection"===u.type)?u.geometries.length:1,o=0;o<a;o++)if(null!==(i=l?u.geometries[o]:u))switch(i.type){case"Point":case"LineString":case"MultiPoint":case"Polygon":case"MultiLineString":case"MultiPolygon":if(!1===t(i,f,s,c,g))return!1;break;case"GeometryCollection":for(n=0;n<i.geometries.length;n++)if(!1===t(i.geometries[n],f,s,c,g))return!1;break;default:throw new Error("Unknown Geometry Type")}else if(!1===t(null,f,s,c,g))return!1;f++}}function s(e,t,r){var n=r;return l(e,function(e,o,i,a,u){n=0===o&&void 0===r?e:t(n,e,o,i,a,u)}),n}function c(t,r){l(t,function(t,n,o,i,a){var u,l=null===t?null:t.type;switch(l){case null:case"Point":case"LineString":case"Polygon":return!1!==r(e.feature(t,o,{bbox:i,id:a}),n,0)&&void 0}switch(l){case"MultiPoint":u="Point";break;case"MultiLineString":u="LineString";break;case"MultiPolygon":u="Polygon"}for(var s=0;s<t.coordinates.length;s++){var c={type:u,coordinates:t.coordinates[s]};if(!1===r(e.feature(c,o),n,s))return!1}})}function g(e,t,r){var n=r;return c(e,function(e,o,i){n=0===o&&0===i&&void 0===r?e:t(n,e,o,i)}),n}function f(r,n){c(r,function(r,o,i){var a=0;if(r.geometry){var u=r.geometry.type;if("Point"!==u&&"MultiPoint"!==u){var l,s=0,c=0,g=0;return!1!==t(r,function(t,u,f,p,h){if(void 0===l||o>s||p>c||h>g)return l=t,s=o,c=p,g=h,void(a=0);var y=e.lineString([l,t],r.properties);if(!1===n(y,o,i,h,a))return!1;a++,l=t})&&void 0}}})}function p(e,t,r){var n=r,o=!1;return f(e,function(e,i,a,u,l){n=!1===o&&void 0===r?e:t(n,e,i,a,u,l),o=!0}),n}function h(t,r){if(!t)throw new Error("geojson is required");c(t,function(t,n,o){if(null!==t.geometry){var i=t.geometry.type,a=t.geometry.coordinates;switch(i){case"LineString":if(!1===r(t,n,o,0,0))return!1;break;case"Polygon":for(var u=0;u<a.length;u++)if(!1===r(e.lineString(a[u],t.properties),n,o,u))return!1}}})}function y(e,t,r){var n=r;return h(e,function(e,o,i,a){n=0===o&&void 0===r?e:t(n,e,o,i,a)}),n}function d(t,r){if(r=r||{},!e.isObject(r))throw new Error("options is invalid");var n,o=r.featureIndex||0,i=r.multiFeatureIndex||0,a=r.geometryIndex||0,u=r.segmentIndex||0,l=r.properties;switch(t.type){case"FeatureCollection":o<0&&(o=t.features.length+o),l=l||t.features[o].properties,n=t.features[o].geometry;break;case"Feature":l=l||t.properties,n=t.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":n=t;break;default:throw new Error("geojson is invalid")}if(null===n)return null;var s=n.coordinates;switch(n.type){case"Point":case"MultiPoint":return null;case"LineString":return u<0&&(u=s.length+u-1),e.lineString([s[u],s[u+1]],l,r);case"Polygon":return a<0&&(a=s.length+a),u<0&&(u=s[a].length+u-1),e.lineString([s[a][u],s[a][u+1]],l,r);case"MultiLineString":return i<0&&(i=s.length+i),u<0&&(u=s[i].length+u-1),e.lineString([s[i][u],s[i][u+1]],l,r);case"MultiPolygon":return i<0&&(i=s.length+i),a<0&&(a=s[i].length+a),u<0&&(u=s[i][a].length-u-1),e.lineString([s[i][a][u],s[i][a][u+1]],l,r)}throw new Error("geojson is invalid")}function v(t,r){if(r=r||{},!e.isObject(r))throw new Error("options is invalid");var n,o=r.featureIndex||0,i=r.multiFeatureIndex||0,a=r.geometryIndex||0,u=r.coordIndex||0,l=r.properties;switch(t.type){case"FeatureCollection":o<0&&(o=t.features.length+o),l=l||t.features[o].properties,n=t.features[o].geometry;break;case"Feature":l=l||t.properties,n=t.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":n=t;break;default:throw new Error("geojson is invalid")}if(null===n)return null;var s=n.coordinates;switch(n.type){case"Point":return e.point(s,l,r);case"MultiPoint":return i<0&&(i=s.length+i),e.point(s[i],l,r);case"LineString":return u<0&&(u=s.length+u),e.point(s[u],l,r);case"Polygon":return a<0&&(a=s.length+a),u<0&&(u=s[a].length+u),e.point(s[a][u],l,r);case"MultiLineString":return i<0&&(i=s.length+i),u<0&&(u=s[i].length+u),e.point(s[i][u],l,r);case"MultiPolygon":return i<0&&(i=s.length+i),a<0&&(a=s[i].length+a),u<0&&(u=s[i][a].length-u),e.point(s[i][a][u],l,r)}throw new Error("geojson is invalid")}exports.coordEach=t,exports.coordReduce=r,exports.propEach=n,exports.propReduce=o,exports.featureEach=i,exports.featureReduce=a,exports.coordAll=u,exports.geomEach=l,exports.geomReduce=s,exports.flattenEach=c,exports.flattenReduce=g,exports.segmentEach=f,exports.segmentReduce=p,exports.lineEach=h,exports.lineReduce=y,exports.findSegment=d,exports.findPoint=v;
},{"@turf/helpers":"il2D"}],"Rjy5":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var r=require("@turf/helpers"),e=require("@turf/invariant"),t=require("@turf/meta");function n(e){if(!e)throw new Error("geojson is required");var n=[];return t.flattenEach(e,function(r){o(r,n)}),r.featureCollection(n)}function o(r,t){var n=[],o=r.geometry;if(null!==o){switch(o.type){case"Polygon":n=e.getCoords(o);break;case"LineString":n=[e.getCoords(o)]}n.forEach(function(e){u(e,r.properties).forEach(function(r){r.id=t.length,t.push(r)})})}}function u(e,t){var n=[];return e.reduce(function(e,o){var u=r.lineString([e,o],t);return u.bbox=i(e,o),n.push(u),o}),n}function i(r,e){var t=r[0],n=r[1],o=e[0],u=e[1];return[t<o?t:o,n<u?n:u,t>o?t:o,n>u?n:u]}exports.default=n;
},{"@turf/helpers":"il2D","@turf/invariant":"ZA2/","@turf/meta":"MNc+"}],"3R6/":[function(require,module,exports) {
var define;
var global = arguments[3];
var t,o=arguments[3];!function(o,n){"object"==typeof exports&&"undefined"!=typeof module?module.exports=n():"function"==typeof t&&t.amd?t(n):o.quickselect=n()}(this,function(){"use strict";function t(t,o,n){var r=t[o];t[o]=t[n],t[n]=r}function o(t,o){return t<o?-1:t>o?1:0}return function(n,r,e,f,u){!function o(n,r,e,f,u){for(;f>e;){if(f-e>600){var a=f-e+1,i=r-e+1,c=Math.log(a),h=.5*Math.exp(2*c/3),s=.5*Math.sqrt(c*h*(a-h)/a)*(i-a/2<0?-1:1),l=Math.max(e,Math.floor(r-i*h/a+s)),M=Math.min(f,Math.floor(r+(a-i)*h/a+s));o(n,r,l,M,u)}var m=n[r],p=e,d=f;for(t(n,e,r),u(n[f],m)>0&&t(n,e,f);p<d;){for(t(n,p,d),p++,d--;u(n[p],m)<0;)p++;for(;u(n[d],m)>0;)d--}0===u(n[e],m)?t(n,e,d):t(n,++d,f),d<=r&&(e=d+1),r<=d&&(f=d-1)}}(n,r,e||0,f||n.length-1,u||o)}});
},{}],"y0Xa":[function(require,module,exports) {
"use strict";module.exports=i,module.exports.default=i;var t=require("quickselect");function i(t,n){if(!(this instanceof i))return new i(t,n);this._maxEntries=Math.max(4,t||9),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),n&&this._initFormat(n),this.clear()}function n(t,i,n){if(!n)return i.indexOf(t);for(var a=0;a<i.length;a++)if(n(t,i[a]))return a;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,a,h){h||(h=x(null)),h.minX=1/0,h.minY=1/0,h.maxX=-1/0,h.maxY=-1/0;for(var r,o=i;o<n;o++)r=t.children[o],e(h,t.leaf?a(r):r);return h}function e(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function r(t,i){return t.minX-i.minX}function o(t,i){return t.minY-i.minY}function s(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function l(t){return t.maxX-t.minX+(t.maxY-t.minY)}function u(t,i){return(Math.max(i.maxX,t.maxX)-Math.min(i.minX,t.minX))*(Math.max(i.maxY,t.maxY)-Math.min(i.minY,t.minY))}function m(t,i){var n=Math.max(t.minX,i.minX),a=Math.max(t.minY,i.minY),h=Math.min(t.maxX,i.maxX),e=Math.min(t.maxY,i.maxY);return Math.max(0,h-n)*Math.max(0,e-a)}function c(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function f(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function x(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,a,h,e){for(var r,o=[n,a];o.length;)(a=o.pop())-(n=o.pop())<=h||(r=n+Math.ceil((a-n)/h/2)*h,t(i,r,n,a,e),o.push(n,r,r,a))}i.prototype={all:function(){return this._all(this.data,[])},search:function(t){var i=this.data,n=[],a=this.toBBox;if(!f(t,i))return n;for(var h,e,r,o,s=[];i;){for(h=0,e=i.children.length;h<e;h++)r=i.children[h],f(t,o=i.leaf?a(r):r)&&(i.leaf?n.push(r):c(t,o)?this._all(r,n):s.push(r));i=s.pop()}return n},collides:function(t){var i=this.data,n=this.toBBox;if(!f(t,i))return!1;for(var a,h,e,r,o=[];i;){for(a=0,h=i.children.length;a<h;a++)if(e=i.children[a],f(t,r=i.leaf?n(e):e)){if(i.leaf||c(t,r))return!0;o.push(e)}i=o.pop()}return!1},load:function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0,n=t.length;i<n;i++)this.insert(t[i]);return this}var a=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===a.height)this._splitRoot(this.data,a);else{if(this.data.height<a.height){var h=this.data;this.data=a,a=h}this._insert(a,this.data.height-a.height-1,!0)}else this.data=a;return this},insert:function(t){return t&&this._insert(t,this.data.height-1),this},clear:function(){return this.data=x([]),this},remove:function(t,i){if(!t)return this;for(var a,h,e,r,o=this.data,s=this.toBBox(t),l=[],u=[];o||l.length;){if(o||(o=l.pop(),h=l[l.length-1],a=u.pop(),r=!0),o.leaf&&-1!==(e=n(t,o.children,i)))return o.children.splice(e,1),l.push(o),this._condense(l),this;r||o.leaf||!c(o,s)?h?(a++,o=h.children[a],r=!1):o=null:(l.push(o),u.push(a),a=0,h=o,o=o.children[0])}return this},toBBox:function(t){return t},compareMinX:r,compareMinY:o,toJSON:function(){return this.data},fromJSON:function(t){return this.data=t,this},_all:function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},_build:function(t,i,n,h){var e,r=n-i+1,o=this._maxEntries;if(r<=o)return a(e=x(t.slice(i,n+1)),this.toBBox),e;h||(h=Math.ceil(Math.log(r)/Math.log(o)),o=Math.ceil(r/Math.pow(o,h-1))),(e=x([])).leaf=!1,e.height=h;var s,l,u,m,c=Math.ceil(r/o),f=c*Math.ceil(Math.sqrt(o));for(d(t,i,n,f,this.compareMinX),s=i;s<=n;s+=f)for(d(t,s,u=Math.min(s+f-1,n),c,this.compareMinY),l=s;l<=u;l+=c)m=Math.min(l+c-1,u),e.children.push(this._build(t,l,m,h-1));return a(e,this.toBBox),e},_chooseSubtree:function(t,i,n,a){for(var h,e,r,o,l,m,c,f;a.push(i),!i.leaf&&a.length-1!==n;){for(c=f=1/0,h=0,e=i.children.length;h<e;h++)l=s(r=i.children[h]),(m=u(t,r)-l)<f?(f=m,c=l<c?l:c,o=r):m===f&&l<c&&(c=l,o=r);i=o||i.children[0]}return i},_insert:function(t,i,n){var a=this.toBBox,h=n?t:a(t),r=[],o=this._chooseSubtree(h,this.data,i,r);for(o.children.push(t),e(o,h);i>=0&&r[i].children.length>this._maxEntries;)this._split(r,i),i--;this._adjustParentBBoxes(h,r,i)},_split:function(t,i){var n=t[i],h=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,h);var r=this._chooseSplitIndex(n,e,h),o=x(n.children.splice(r,n.children.length-r));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},_splitRoot:function(t,i){this.data=x([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},_chooseSplitIndex:function(t,i,n){var a,e,r,o,l,u,c,f;for(u=c=1/0,a=i;a<=n-i;a++)o=m(e=h(t,0,a,this.toBBox),r=h(t,a,n,this.toBBox)),l=s(e)+s(r),o<u?(u=o,f=a,c=l<c?l:c):o===u&&l<c&&(c=l,f=a);return f},_chooseSplitAxis:function(t,i,n){var a=t.leaf?this.compareMinX:r,h=t.leaf?this.compareMinY:o;this._allDistMargin(t,i,n,a)<this._allDistMargin(t,i,n,h)&&t.children.sort(a)},_allDistMargin:function(t,i,n,a){t.children.sort(a);var r,o,s=this.toBBox,u=h(t,0,i,s),m=h(t,n-i,n,s),c=l(u)+l(m);for(r=i;r<n-i;r++)o=t.children[r],e(u,t.leaf?s(o):o),c+=l(u);for(r=n-i-1;r>=i;r--)o=t.children[r],e(m,t.leaf?s(o):o),c+=l(m);return c},_adjustParentBBoxes:function(t,i,n){for(var a=n;a>=0;a--)e(i[a],t)},_condense:function(t){for(var i,n=t.length-1;n>=0;n--)0===t[n].children.length?n>0?(i=t[n-1].children).splice(i.indexOf(t[n]),1):this.clear():a(t[n],this.toBBox)},_initFormat:function(t){var i=["return a"," - b",";"];this.compareMinX=new Function("a","b",i.join(t[0])),this.compareMinY=new Function("a","b",i.join(t[1])),this.toBBox=new Function("a","return {minX: a"+t[0]+", minY: a"+t[1]+", maxX: a"+t[2]+", maxY: a"+t[3]+"};")}};
},{"quickselect":"3R6/"}],"lhdg":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("@turf/meta");function r(r){var t=[1/0,1/0,-1/0,-1/0];return e.coordEach(r,function(e){t[0]>e[0]&&(t[0]=e[0]),t[1]>e[1]&&(t[1]=e[1]),t[2]<e[0]&&(t[2]=e[0]),t[3]<e[1]&&(t[3]=e[1])}),t}exports.default=r;
},{"@turf/meta":"MNc+"}],"23Mq":[function(require,module,exports) {
var r=require("rbush"),e=require("@turf/helpers"),t=require("@turf/meta"),o=require("@turf/bbox").default,i=t.featureEach,n=t.coordEach,a=e.polygon,l=e.featureCollection;function u(e){var t=r(e);return t.insert=function(e){if("Feature"!==e.type)throw new Error("invalid feature");return e.bbox=e.bbox?e.bbox:o(e),r.prototype.insert.call(this,e)},t.load=function(e){var t=[];return Array.isArray(e)?e.forEach(function(r){if("Feature"!==r.type)throw new Error("invalid features");r.bbox=r.bbox?r.bbox:o(r),t.push(r)}):i(e,function(r){if("Feature"!==r.type)throw new Error("invalid features");r.bbox=r.bbox?r.bbox:o(r),t.push(r)}),r.prototype.load.call(this,t)},t.remove=function(e,t){if("Feature"!==e.type)throw new Error("invalid feature");return e.bbox=e.bbox?e.bbox:o(e),r.prototype.remove.call(this,e,t)},t.clear=function(){return r.prototype.clear.call(this)},t.search=function(e){var t=r.prototype.search.call(this,this.toBBox(e));return l(t)},t.collides=function(e){return r.prototype.collides.call(this,this.toBBox(e))},t.all=function(){var e=r.prototype.all.call(this);return l(e)},t.toJSON=function(){return r.prototype.toJSON.call(this)},t.fromJSON=function(e){return r.prototype.fromJSON.call(this,e)},t.toBBox=function(r){var e;if(r.bbox)e=r.bbox;else if(Array.isArray(r)&&4===r.length)e=r;else if(Array.isArray(r)&&6===r.length)e=[r[0],r[1],r[3],r[4]];else if("Feature"===r.type)e=o(r);else{if("FeatureCollection"!==r.type)throw new Error("invalid geojson");e=o(r)}return{minX:e[0],minY:e[1],maxX:e[2],maxY:e[3]}},t}module.exports=u,module.exports.default=u;
},{"rbush":"y0Xa","@turf/helpers":"il2D","@turf/meta":"MNc+","@turf/bbox":"lhdg"}],"cfYO":[function(require,module,exports) {
"use strict";var e=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0});var r=require("@turf/helpers"),t=require("@turf/invariant"),n=e(require("@turf/line-segment")),o=require("@turf/meta"),u=e(require("geojson-rbush"));function i(e,i){var l={},f=[];if("LineString"===e.type&&(e=r.feature(e)),"LineString"===i.type&&(i=r.feature(i)),"Feature"===e.type&&"Feature"===i.type&&null!==e.geometry&&null!==i.geometry&&"LineString"===e.geometry.type&&"LineString"===i.geometry.type&&2===e.geometry.coordinates.length&&2===i.geometry.coordinates.length){var s=a(e,i);return s&&f.push(s),r.featureCollection(f)}var c=u.default();return c.load(n.default(i)),o.featureEach(n.default(e),function(e){o.featureEach(c.search(e),function(r){var n=a(e,r);if(n){var o=t.getCoords(n).join(",");l[o]||(l[o]=!0,f.push(n))}})}),r.featureCollection(f)}function a(e,n){var o=t.getCoords(e),u=t.getCoords(n);if(2!==o.length)throw new Error("<intersects> line1 must only contain 2 coordinates");if(2!==u.length)throw new Error("<intersects> line2 must only contain 2 coordinates");var i=o[0][0],a=o[0][1],l=o[1][0],f=o[1][1],s=u[0][0],c=u[0][1],g=u[1][0],d=u[1][1],h=(d-c)*(l-i)-(g-s)*(f-a),y=(g-s)*(a-c)-(d-c)*(i-s),p=(l-i)*(a-c)-(f-a)*(i-s);if(0===h)return null;var v=y/h,m=p/h;if(v>=0&&v<=1&&m>=0&&m<=1){var _=i+v*(l-i),q=a+v*(f-a);return r.point([_,q])}return null}exports.default=i;
},{"@turf/helpers":"il2D","@turf/invariant":"ZA2/","@turf/line-segment":"Rjy5","@turf/meta":"MNc+","geojson-rbush":"23Mq"}],"DzqP":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.feature=n,exports.geometry=i,exports.point=s,exports.points=a,exports.polygon=u,exports.polygons=w,exports.lineString=d,exports.lineStrings=c,exports.featureCollection=f,exports.multiLineString=m,exports.multiPoint=h,exports.multiPolygon=l,exports.geometryCollection=p,exports.round=g,exports.radiansToLength=b,exports.lengthToRadians=y,exports.lengthToDegrees=E,exports.bearingToAzimuth=x,exports.radiansToDegrees=v,exports.degreesToRadians=A,exports.convertLength=q,exports.convertArea=P,exports.isNumber=k,exports.isObject=T,exports.validateBBox=M,exports.validateId=L,exports.radians2degrees=R,exports.degrees2radians=D,exports.distanceToDegrees=F,exports.distanceToRadians=S,exports.radiansToDistance=N,exports.bearingToAngle=O,exports.convertDistance=j,exports.areaFactors=exports.unitsFactors=exports.factors=exports.earthRadius=void 0;var r=6371008.8;exports.earthRadius=r;var e={meters:r,metres:r,millimeters:1e3*r,millimetres:1e3*r,centimeters:100*r,centimetres:100*r,kilometers:r/1e3,kilometres:r/1e3,miles:r/1609.344,nauticalmiles:r/1852,inches:39.37*r,yards:r/1.0936,feet:3.28084*r,radians:1,degrees:r/111325};exports.factors=e;var t={meters:1,metres:1,millimeters:1e3,millimetres:1e3,centimeters:100,centimetres:100,kilometers:.001,kilometres:.001,miles:1/1609.344,nauticalmiles:1/1852,inches:39.37,yards:1/1.0936,feet:3.28084,radians:1/r,degrees:1/111325};exports.unitsFactors=t;var o={meters:1,metres:1,millimeters:1e6,millimetres:1e6,centimeters:1e4,centimetres:1e4,kilometers:1e-6,kilometres:1e-6,acres:247105e-9,miles:3.86e-7,yards:1.195990046,feet:10.763910417,inches:1550.003100006};function n(r,e,t){if(!T(t=t||{}))throw new Error("options is invalid");var o=t.bbox,n=t.id;if(void 0===r)throw new Error("geometry is required");if(e&&e.constructor!==Object)throw new Error("properties must be an Object");o&&M(o),n&&L(n);var i={type:"Feature"};return n&&(i.id=n),o&&(i.bbox=o),i.properties=e||{},i.geometry=r,i}function i(r,e,t){if(!T(t=t||{}))throw new Error("options is invalid");var o,n=t.bbox;if(!r)throw new Error("type is required");if(!e)throw new Error("coordinates is required");if(!Array.isArray(e))throw new Error("coordinates must be an Array");switch(n&&M(n),r){case"Point":o=s(e).geometry;break;case"LineString":o=d(e).geometry;break;case"Polygon":o=u(e).geometry;break;case"MultiPoint":o=h(e).geometry;break;case"MultiLineString":o=m(e).geometry;break;case"MultiPolygon":o=l(e).geometry;break;default:throw new Error(r+" is invalid")}return n&&(o.bbox=n),o}function s(r,e,t){if(!r)throw new Error("coordinates is required");if(!Array.isArray(r))throw new Error("coordinates must be an Array");if(r.length<2)throw new Error("coordinates must be at least 2 numbers long");if(!k(r[0])||!k(r[1]))throw new Error("coordinates must contain numbers");return n({type:"Point",coordinates:r},e,t)}function a(r,e,t){if(!r)throw new Error("coordinates is required");if(!Array.isArray(r))throw new Error("coordinates must be an Array");return f(r.map(function(r){return s(r,e)}),t)}function u(r,e,t){if(!r)throw new Error("coordinates is required");for(var o=0;o<r.length;o++){var i=r[o];if(i.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var s=0;s<i[i.length-1].length;s++){if(0===o&&0===s&&!k(i[0][0])||!k(i[0][1]))throw new Error("coordinates must contain numbers");if(i[i.length-1][s]!==i[0][s])throw new Error("First and last Position are not equivalent.")}}return n({type:"Polygon",coordinates:r},e,t)}function w(r,e,t){if(!r)throw new Error("coordinates is required");if(!Array.isArray(r))throw new Error("coordinates must be an Array");return f(r.map(function(r){return u(r,e)}),t)}function d(r,e,t){if(!r)throw new Error("coordinates is required");if(r.length<2)throw new Error("coordinates must be an array of two or more positions");if(!k(r[0][1])||!k(r[0][1]))throw new Error("coordinates must contain numbers");return n({type:"LineString",coordinates:r},e,t)}function c(r,e,t){if(!r)throw new Error("coordinates is required");if(!Array.isArray(r))throw new Error("coordinates must be an Array");return f(r.map(function(r){return d(r,e)}),t)}function f(r,e){if(!T(e=e||{}))throw new Error("options is invalid");var t=e.bbox,o=e.id;if(!r)throw new Error("No features passed");if(!Array.isArray(r))throw new Error("features must be an Array");t&&M(t),o&&L(o);var n={type:"FeatureCollection"};return o&&(n.id=o),t&&(n.bbox=t),n.features=r,n}function m(r,e,t){if(!r)throw new Error("coordinates is required");return n({type:"MultiLineString",coordinates:r},e,t)}function h(r,e,t){if(!r)throw new Error("coordinates is required");return n({type:"MultiPoint",coordinates:r},e,t)}function l(r,e,t){if(!r)throw new Error("coordinates is required");return n({type:"MultiPolygon",coordinates:r},e,t)}function p(r,e,t){if(!r)throw new Error("geometries is required");if(!Array.isArray(r))throw new Error("geometries must be an Array");return n({type:"GeometryCollection",geometries:r},e,t)}function g(r,e){if(null==r||isNaN(r))throw new Error("num is required");if(e&&!(e>=0))throw new Error("precision must be a positive number");var t=Math.pow(10,e||0);return Math.round(r*t)/t}function b(r,t){if(null==r)throw new Error("radians is required");if(t&&"string"!=typeof t)throw new Error("units must be a string");var o=e[t||"kilometers"];if(!o)throw new Error(t+" units is invalid");return r*o}function y(r,t){if(null==r)throw new Error("distance is required");if(t&&"string"!=typeof t)throw new Error("units must be a string");var o=e[t||"kilometers"];if(!o)throw new Error(t+" units is invalid");return r/o}function E(r,e){return v(y(r,e))}function x(r){if(null==r)throw new Error("bearing is required");var e=r%360;return e<0&&(e+=360),e}function v(r){if(null==r)throw new Error("radians is required");return 180*(r%(2*Math.PI))/Math.PI}function A(r){if(null==r)throw new Error("degrees is required");return r%360*Math.PI/180}function q(r,e,t){if(null==r)throw new Error("length is required");if(!(r>=0))throw new Error("length must be a positive number");return b(y(r,e),t||"kilometers")}function P(r,e,t){if(null==r)throw new Error("area is required");if(!(r>=0))throw new Error("area must be a positive number");var n=o[e||"meters"];if(!n)throw new Error("invalid original units");var i=o[t||"kilometers"];if(!i)throw new Error("invalid final units");return r/n*i}function k(r){return!isNaN(r)&&null!==r&&!Array.isArray(r)}function T(r){return!!r&&r.constructor===Object}function M(r){if(!r)throw new Error("bbox is required");if(!Array.isArray(r))throw new Error("bbox must be an Array");if(4!==r.length&&6!==r.length)throw new Error("bbox must be an Array of 4 or 6 numbers");r.forEach(function(r){if(!k(r))throw new Error("bbox must only contain numbers")})}function L(r){if(!r)throw new Error("id is required");if(-1===["string","number"].indexOf(typeof r))throw new Error("id must be a number or a string")}function R(){throw new Error("method has been renamed to `radiansToDegrees`")}function D(){throw new Error("method has been renamed to `degreesToRadians`")}function F(){throw new Error("method has been renamed to `lengthToDegrees`")}function S(){throw new Error("method has been renamed to `lengthToRadians`")}function N(){throw new Error("method has been renamed to `radiansToLength`")}function O(){throw new Error("method has been renamed to `bearingToAzimuth`")}function j(){throw new Error("method has been renamed to `convertLength`")}exports.areaFactors=o;
},{}],"OJmp":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.coordEach=t,exports.coordReduce=r,exports.propEach=n,exports.propReduce=o,exports.featureEach=i,exports.featureReduce=u,exports.coordAll=a,exports.geomEach=l,exports.geomReduce=s,exports.flattenEach=c,exports.flattenReduce=g,exports.segmentEach=f,exports.segmentReduce=p,exports.lineEach=h,exports.lineReduce=y,exports.findSegment=d,exports.findPoint=v;var e=require("@turf/helpers");function t(e,r,n){if(null!==e)for(var o,i,u,a,l,s,c,g,f=0,p=0,h=e.type,y="FeatureCollection"===h,d="Feature"===h,v=y?e.features.length:1,P=0;P<v;P++){l=(g=!!(c=y?e.features[P].geometry:d?e.geometry:e)&&"GeometryCollection"===c.type)?c.geometries.length:1;for(var m=0;m<l;m++){var w=0,x=0;if(null!==(a=g?c.geometries[m]:c)){s=a.coordinates;var b=a.type;switch(f=!n||"Polygon"!==b&&"MultiPolygon"!==b?0:1,b){case null:break;case"Point":if(!1===r(s,p,P,w,x))return!1;p++,w++;break;case"LineString":case"MultiPoint":for(o=0;o<s.length;o++){if(!1===r(s[o],p,P,w,x))return!1;p++,"MultiPoint"===b&&w++}"LineString"===b&&w++;break;case"Polygon":case"MultiLineString":for(o=0;o<s.length;o++){for(i=0;i<s[o].length-f;i++){if(!1===r(s[o][i],p,P,w,x))return!1;p++}"MultiLineString"===b&&w++,"Polygon"===b&&x++}"Polygon"===b&&w++;break;case"MultiPolygon":for(o=0;o<s.length;o++){for("MultiPolygon"===b&&(x=0),i=0;i<s[o].length;i++){for(u=0;u<s[o][i].length-f;u++){if(!1===r(s[o][i][u],p,P,w,x))return!1;p++}x++}w++}break;case"GeometryCollection":for(o=0;o<a.geometries.length;o++)if(!1===t(a.geometries[o],r,n))return!1;break;default:throw new Error("Unknown Geometry Type")}}}}}function r(e,r,n,o){var i=n;return t(e,function(e,t,o,u,a){i=0===t&&void 0===n?e:r(i,e,t,o,u,a)},o),i}function n(e,t){var r;switch(e.type){case"FeatureCollection":for(r=0;r<e.features.length&&!1!==t(e.features[r].properties,r);r++);break;case"Feature":t(e.properties,0)}}function o(e,t,r){var o=r;return n(e,function(e,n){o=0===n&&void 0===r?e:t(o,e,n)}),o}function i(e,t){if("Feature"===e.type)t(e,0);else if("FeatureCollection"===e.type)for(var r=0;r<e.features.length&&!1!==t(e.features[r],r);r++);}function u(e,t,r){var n=r;return i(e,function(e,o){n=0===o&&void 0===r?e:t(n,e,o)}),n}function a(e){var r=[];return t(e,function(e){r.push(e)}),r}function l(e,t){var r,n,o,i,u,a,l,s,c,g,f=0,p="FeatureCollection"===e.type,h="Feature"===e.type,y=p?e.features.length:1;for(r=0;r<y;r++){for(a=p?e.features[r].geometry:h?e.geometry:e,s=p?e.features[r].properties:h?e.properties:{},c=p?e.features[r].bbox:h?e.bbox:void 0,g=p?e.features[r].id:h?e.id:void 0,u=(l=!!a&&"GeometryCollection"===a.type)?a.geometries.length:1,o=0;o<u;o++)if(null!==(i=l?a.geometries[o]:a))switch(i.type){case"Point":case"LineString":case"MultiPoint":case"Polygon":case"MultiLineString":case"MultiPolygon":if(!1===t(i,f,s,c,g))return!1;break;case"GeometryCollection":for(n=0;n<i.geometries.length;n++)if(!1===t(i.geometries[n],f,s,c,g))return!1;break;default:throw new Error("Unknown Geometry Type")}else if(!1===t(null,f,s,c,g))return!1;f++}}function s(e,t,r){var n=r;return l(e,function(e,o,i,u,a){n=0===o&&void 0===r?e:t(n,e,o,i,u,a)}),n}function c(t,r){l(t,function(t,n,o,i,u){var a,l=null===t?null:t.type;switch(l){case null:case"Point":case"LineString":case"Polygon":return!1!==r((0,e.feature)(t,o,{bbox:i,id:u}),n,0)&&void 0}switch(l){case"MultiPoint":a="Point";break;case"MultiLineString":a="LineString";break;case"MultiPolygon":a="Polygon"}for(var s=0;s<t.coordinates.length;s++){var c={type:a,coordinates:t.coordinates[s]};if(!1===r((0,e.feature)(c,o),n,s))return!1}})}function g(e,t,r){var n=r;return c(e,function(e,o,i){n=0===o&&0===i&&void 0===r?e:t(n,e,o,i)}),n}function f(r,n){c(r,function(r,o,i){var u=0;if(r.geometry){var a,l=r.geometry.type;if("Point"!==l&&"MultiPoint"!==l)return!1!==t(r,function(t,l,s,c,g){if(void 0!==a){var f=(0,e.lineString)([a,t],r.properties);if(!1===n(f,o,i,g,u))return!1;u++,a=t}else a=t})&&void 0}})}function p(e,t,r){var n=r,o=!1;return f(e,function(e,i,u,a,l){n=!1===o&&void 0===r?e:t(n,e,i,u,a,l),o=!0}),n}function h(t,r){if(!t)throw new Error("geojson is required");c(t,function(t,n,o){if(null!==t.geometry){var i=t.geometry.type,u=t.geometry.coordinates;switch(i){case"LineString":if(!1===r(t,n,o,0,0))return!1;break;case"Polygon":for(var a=0;a<u.length;a++)if(!1===r((0,e.lineString)(u[a],t.properties),n,o,a))return!1}}})}function y(e,t,r){var n=r;return h(e,function(e,o,i,u){n=0===o&&void 0===r?e:t(n,e,o,i,u)}),n}function d(t,r){if(r=r||{},!(0,e.isObject)(r))throw new Error("options is invalid");var n,o=r.featureIndex||0,i=r.multiFeatureIndex||0,u=r.geometryIndex||0,a=r.segmentIndex||0,l=r.properties;switch(t.type){case"FeatureCollection":o<0&&(o=t.features.length+o),l=l||t.features[o].properties,n=t.features[o].geometry;break;case"Feature":l=l||t.properties,n=t.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":n=t;break;default:throw new Error("geojson is invalid")}if(null===n)return null;var s=n.coordinates;switch(n.type){case"Point":case"MultiPoint":return null;case"LineString":return a<0&&(a=s.length+a-1),(0,e.lineString)([s[a],s[a+1]],l,r);case"Polygon":return u<0&&(u=s.length+u),a<0&&(a=s[u].length+a-1),(0,e.lineString)([s[u][a],s[u][a+1]],l,r);case"MultiLineString":return i<0&&(i=s.length+i),a<0&&(a=s[i].length+a-1),(0,e.lineString)([s[i][a],s[i][a+1]],l,r);case"MultiPolygon":return i<0&&(i=s.length+i),u<0&&(u=s[i].length+u),a<0&&(a=s[i][u].length-a-1),(0,e.lineString)([s[i][u][a],s[i][u][a+1]],l,r)}throw new Error("geojson is invalid")}function v(t,r){if(r=r||{},!(0,e.isObject)(r))throw new Error("options is invalid");var n,o=r.featureIndex||0,i=r.multiFeatureIndex||0,u=r.geometryIndex||0,a=r.coordIndex||0,l=r.properties;switch(t.type){case"FeatureCollection":o<0&&(o=t.features.length+o),l=l||t.features[o].properties,n=t.features[o].geometry;break;case"Feature":l=l||t.properties,n=t.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":n=t;break;default:throw new Error("geojson is invalid")}if(null===n)return null;var s=n.coordinates;switch(n.type){case"Point":return(0,e.point)(s,l,r);case"MultiPoint":return i<0&&(i=s.length+i),(0,e.point)(s[i],l,r);case"LineString":return a<0&&(a=s.length+a),(0,e.point)(s[a],l,r);case"Polygon":return u<0&&(u=s.length+u),a<0&&(a=s[u].length+a),(0,e.point)(s[u][a],l,r);case"MultiLineString":return i<0&&(i=s.length+i),a<0&&(a=s[i].length+a),(0,e.point)(s[i][a],l,r);case"MultiPolygon":return i<0&&(i=s.length+i),u<0&&(u=s[i].length+u),a<0&&(a=s[i][u].length-a),(0,e.point)(s[i][u][a],l,r)}throw new Error("geojson is invalid")}
},{"@turf/helpers":"DzqP"}],"+Exe":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.getCoord=r,exports.getCoords=t,exports.containsNumber=o,exports.geojsonType=n,exports.featureOf=i,exports.collectionOf=u,exports.getGeom=a,exports.getGeomType=s,exports.getType=y;var e=require("@turf/helpers");function r(e){if(!e)throw new Error("coord is required");if("Feature"===e.type&&null!==e.geometry&&"Point"===e.geometry.type)return e.geometry.coordinates;if("Point"===e.type)return e.coordinates;if(Array.isArray(e)&&e.length>=2&&void 0===e[0].length&&void 0===e[1].length)return e;throw new Error("coord must be GeoJSON Point or an Array of numbers")}function t(e){if(!e)throw new Error("coords is required");if("Feature"===e.type&&null!==e.geometry)return e.geometry.coordinates;if(e.coordinates)return e.coordinates;if(Array.isArray(e))return e;throw new Error("coords must be GeoJSON Feature, Geometry Object or an Array")}function o(r){if(r.length>1&&(0,e.isNumber)(r[0])&&(0,e.isNumber)(r[1]))return!0;if(Array.isArray(r[0])&&r[0].length)return o(r[0]);throw new Error("coordinates must only contain numbers")}function n(e,r,t){if(!r||!t)throw new Error("type and name required");if(!e||e.type!==r)throw new Error("Invalid input to "+t+": must be a "+r+", given "+e.type)}function i(e,r,t){if(!e)throw new Error("No feature passed");if(!t)throw new Error(".featureOf() requires a name");if(!e||"Feature"!==e.type||!e.geometry)throw new Error("Invalid input to "+t+", Feature with geometry required");if(!e.geometry||e.geometry.type!==r)throw new Error("Invalid input to "+t+": must be a "+r+", given "+e.geometry.type)}function u(e,r,t){if(!e)throw new Error("No featureCollection passed");if(!t)throw new Error(".collectionOf() requires a name");if(!e||"FeatureCollection"!==e.type)throw new Error("Invalid input to "+t+", FeatureCollection required");for(var o=0;o<e.features.length;o++){var n=e.features[o];if(!n||"Feature"!==n.type||!n.geometry)throw new Error("Invalid input to "+t+", Feature with geometry required");if(!n.geometry||n.geometry.type!==r)throw new Error("Invalid input to "+t+": must be a "+r+", given "+n.geometry.type)}}function a(e){if(!e)throw new Error("geojson is required");if(void 0!==e.geometry)return e.geometry;if(e.coordinates||e.geometries)return e;throw new Error("geojson must be a valid Feature or Geometry Object")}function s(){throw new Error("invariant.getGeomType has been deprecated in v5.0 in favor of invariant.getType")}function y(e,r){if(!e)throw new Error((r||"geojson")+" is required");if(e.geometry&&e.geometry.type)return e.geometry.type;if(e.type)return e.type;throw new Error((r||"geojson")+" is invalid")}
},{"@turf/helpers":"DzqP"}],"QvRS":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var r=require("@turf/meta"),e=require("@turf/invariant"),t=require("@turf/helpers");function n(r){var e=r[0],t=r[1];return[t[0]-e[0],t[1]-e[1]]}function i(r,e){return r[0]*e[1]-e[0]*r[1]}function u(r,e){return[r[0]+e[0],r[1]+e[1]]}function o(r,e){return[r[0]-e[0],r[1]-e[1]]}function s(r,e){return[r*e[0],r*e[1]]}function a(r,e){var t=r[0],a=n(r),f=e[0],c=n(e),h=i(a,c);return u(t,s(i(o(f,t),c)/h,a))}function f(r,e){return 0===i(n(r),n(e))}function c(r,e){return!f(r,e)&&a(r,e)}function h(n,i,u){if(u=u||{},!(0,t.isObject)(u))throw new Error("options is invalid");var o=u.units;if(!n)throw new Error("geojson is required");if(null==i||isNaN(i))throw new Error("distance is required");var s=(0,e.getType)(n),a=n.properties;switch(s){case"LineString":return p(n,i,o);case"MultiLineString":var f=[];return(0,r.flattenEach)(n,function(r){f.push(p(r,i,o).geometry.coordinates)}),(0,t.multiLineString)(f,a);default:throw new Error("geometry "+s+" is not supported")}}function p(r,n,i){var u=[],o=(0,t.lengthToDegrees)(n,i),s=(0,e.getCoords)(r),a=[];return s.forEach(function(r,e){if(e!==s.length-1){var t=l(r,s[e+1],o);if(u.push(t),e>0){var n=u[e-1],i=c(t,n);!1!==i&&(n[1]=i,t[0]=i),a.push(n[0]),e===s.length-2&&(a.push(t[0]),a.push(t[1]))}2===s.length&&(a.push(t[0]),a.push(t[1]))}}),(0,t.lineString)(a,r.properties)}function l(r,e,t){var n=Math.sqrt((r[0]-e[0])*(r[0]-e[0])+(r[1]-e[1])*(r[1]-e[1])),i=r[0]+t*(e[1]-r[1])/n,u=e[0]+t*(e[1]-r[1])/n;return[[i,r[1]+t*(r[0]-e[0])/n],[u,e[1]+t*(r[0]-e[0])/n]]}var v=h;exports.default=v;
},{"@turf/meta":"OJmp","@turf/invariant":"+Exe","@turf/helpers":"DzqP"}],"d4aq":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var r=require("@turf/helpers");function e(e,o){void 0===o&&(o={});var t=Number(e[0]),u=Number(e[1]),i=Number(e[2]),p=Number(e[3]);if(6===e.length)throw new Error("@turf/bbox-polygon does not support BBox with 6 positions");var s=[t,u],n=[t,p],b=[i,p],d=[i,u];return r.polygon([[s,d,b,n,s]],o.properties,{bbox:e,id:o.id})}exports.default=e;
},{"@turf/helpers":"il2D"}],"HpwF":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var r=require("@turf/invariant");function e(e,o,i){if(void 0===i&&(i={}),!e)throw new Error("point is required");if(!o)throw new Error("polygon is required");var u=r.getCoord(e),a=r.getGeom(o),f=a.type,g=o.bbox,l=a.coordinates;if(g&&!1===t(u,g))return!1;"Polygon"===f&&(l=[l]);for(var d=!1,v=0;v<l.length&&!d;v++)if(n(u,l[v][0],i.ignoreBoundary)){for(var h=!1,s=1;s<l[v].length&&!h;)n(u,l[v][s],!i.ignoreBoundary)&&(h=!0),s++;h||(d=!0)}return d}function n(r,e,n){var t=!1;e[0][0]===e[e.length-1][0]&&e[0][1]===e[e.length-1][1]&&(e=e.slice(0,e.length-1));for(var o=0,i=e.length-1;o<e.length;i=o++){var u=e[o][0],a=e[o][1],f=e[i][0],g=e[i][1];if(r[1]*(u-f)+a*(f-r[0])+g*(r[0]-u)==0&&(u-r[0])*(f-r[0])<=0&&(a-r[1])*(g-r[1])<=0)return!n;a>r[1]!=g>r[1]&&r[0]<(f-u)*(r[1]-a)/(g-a)+u&&(t=!t)}return t}function t(r,e){return e[0]<=r[0]&&e[1]<=r[1]&&e[2]>=r[0]&&e[3]>=r[1]}exports.default=e;
},{"@turf/invariant":"ZA2/"}],"OMlY":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var t=require("@turf/invariant");function a(a,r,n){void 0===n&&(n={});for(var s=t.getCoord(a),o=t.getCoords(r),h=0;h<o.length-1;h++){var b=!1;if(n.ignoreEndVertices&&(0===h&&(b="start"),h===o.length-2&&(b="end"),0===h&&h+1===o.length-1&&(b="both")),e(o[h],o[h+1],s,b))return!0}return!1}function e(t,a,e,r){var n=e[0],s=e[1],o=t[0],h=t[1],b=a[0],i=a[1],u=b-o,d=i-h;return 0==(e[0]-o)*d-(e[1]-h)*u&&(r?"start"===r?Math.abs(u)>=Math.abs(d)?u>0?o<n&&n<=b:b<=n&&n<o:d>0?h<s&&s<=i:i<=s&&s<h:"end"===r?Math.abs(u)>=Math.abs(d)?u>0?o<=n&&n<b:b<n&&n<=o:d>0?h<=s&&s<i:i<s&&s<=h:"both"===r&&(Math.abs(u)>=Math.abs(d)?u>0?o<n&&n<b:b<n&&n<o:d>0?h<s&&s<i:i<s&&s<h):Math.abs(u)>=Math.abs(d)?u>0?o<=n&&n<=b:b<=n&&n<=o:d>0?h<=s&&s<=i:i<=s&&s<=h)}exports.default=a;
},{"@turf/invariant":"ZA2/"}],"jWcY":[function(require,module,exports) {
"use strict";var e=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0});var t=e(require("@turf/bbox")),r=e(require("@turf/boolean-point-in-polygon")),n=e(require("@turf/boolean-point-on-line")),o=require("@turf/invariant");function i(e,t){var i=o.getGeom(e),g=o.getGeom(t),y=o.getType(e),P=o.getType(t),h=o.getCoords(e),v=o.getCoords(t);switch(y){case"Point":switch(P){case"Point":return p(h,v);default:throw new Error("feature2 "+P+" geometry not supported")}case"MultiPoint":switch(P){case"Point":return u(i,g);case"MultiPoint":return a(i,g);default:throw new Error("feature2 "+P+" geometry not supported")}case"LineString":switch(P){case"Point":return n.default(g,i,{ignoreEndVertices:!0});case"LineString":return l(i,g);case"MultiPoint":return s(i,g);default:throw new Error("feature2 "+P+" geometry not supported")}case"Polygon":switch(P){case"Point":return r.default(g,i,{ignoreBoundary:!0});case"LineString":return d(i,g);case"Polygon":return c(i,g);case"MultiPoint":return f(i,g);default:throw new Error("feature2 "+P+" geometry not supported")}default:throw new Error("feature1 "+y+" geometry not supported")}}function u(e,t){var r,n=!1;for(r=0;r<e.coordinates.length;r++)if(p(e.coordinates[r],t.coordinates)){n=!0;break}return n}function a(e,t){for(var r=0,n=t.coordinates;r<n.length;r++){for(var o=n[r],i=!1,u=0,a=e.coordinates;u<a.length;u++){if(p(o,a[u])){i=!0;break}}if(!i)return!1}return!0}function s(e,t){for(var r=!1,o=0,i=t.coordinates;o<i.length;o++){var u=i[o];if(n.default(u,e,{ignoreEndVertices:!0})&&(r=!0),!n.default(u,e))return!1}return!!r}function f(e,t){for(var n=0,o=t.coordinates;n<o.length;n++){var i=o[n];if(!r.default(i,e,{ignoreBoundary:!0}))return!1}return!0}function l(e,t){for(var r=!1,o=0,i=t.coordinates;o<i.length;o++){var u=i[o];if(n.default({type:"Point",coordinates:u},e,{ignoreEndVertices:!0})&&(r=!0),!n.default({type:"Point",coordinates:u},e,{ignoreEndVertices:!1}))return!1}return r}function d(e,n){var o=!1,i=0;if(!g(t.default(e),t.default(n)))return!1;for(;i<n.coordinates.length-1;i++){var u=y(n.coordinates[i],n.coordinates[i+1]);if(r.default({type:"Point",coordinates:u},e,{ignoreBoundary:!0})){o=!0;break}}return o}function c(e,n){if("Feature"===e.type&&null===e.geometry)return!1;if("Feature"===n.type&&null===n.geometry)return!1;if(!g(t.default(e),t.default(n)))return!1;for(var i=0,u=o.getGeom(n).coordinates;i<u.length;i++)for(var a=0,s=u[i];a<s.length;a++){var f=s[a];if(!r.default(f,e))return!1}return!0}function g(e,t){return!(e[0]>t[0])&&(!(e[2]<t[2])&&(!(e[1]>t[1])&&!(e[3]<t[3])))}function p(e,t){return e[0]===t[0]&&e[1]===t[1]}function y(e,t){return[(e[0]+t[0])/2,(e[1]+t[1])/2]}exports.default=i,exports.isPointInMultiPoint=u,exports.isMultiPointInMultiPoint=a,exports.isMultiPointOnLine=s,exports.isMultiPointInPoly=f,exports.isLineOnLine=l,exports.isLineInPoly=d,exports.isPolyInPoly=c,exports.doBBoxOverlap=g,exports.compareCoords=p,exports.getMidpoint=y;
},{"@turf/bbox":"lhdg","@turf/boolean-point-in-polygon":"HpwF","@turf/boolean-point-on-line":"OMlY","@turf/invariant":"ZA2/"}],"1mUN":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("@turf/helpers"),r=require("@turf/invariant");function a(a,s,n){if(void 0===n&&(n={}),!0===n.final)return t(a,s);var o=r.getCoord(a),i=r.getCoord(s),d=e.degreesToRadians(o[0]),u=e.degreesToRadians(i[0]),h=e.degreesToRadians(o[1]),M=e.degreesToRadians(i[1]),c=Math.sin(u-d)*Math.cos(M),f=Math.cos(h)*Math.sin(M)-Math.sin(h)*Math.cos(M)*Math.cos(u-d);return e.radiansToDegrees(Math.atan2(c,f))}function t(e,r){var t=a(r,e);return t=(t+180)%360}exports.default=a;
},{"@turf/helpers":"il2D","@turf/invariant":"ZA2/"}],"ThDM":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("@turf/helpers"),a=require("@turf/invariant");function s(s,t,r,i){void 0===i&&(i={});var n=a.getCoord(s),o=e.degreesToRadians(n[0]),h=e.degreesToRadians(n[1]),d=e.degreesToRadians(r),M=e.lengthToRadians(t,i.units),u=Math.asin(Math.sin(h)*Math.cos(M)+Math.cos(h)*Math.sin(M)*Math.cos(d)),c=o+Math.atan2(Math.sin(d)*Math.sin(M)*Math.cos(h),Math.cos(M)-Math.sin(h)*Math.sin(u)),g=e.radiansToDegrees(c),p=e.radiansToDegrees(u);return e.point([g,p],i.properties)}exports.default=s;
},{"@turf/helpers":"il2D","@turf/invariant":"ZA2/"}],"07Nc":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("@turf/invariant"),t=require("@turf/helpers");function a(a,r,s){void 0===s&&(s={});var o=e.getCoord(a),i=e.getCoord(r),n=t.degreesToRadians(i[1]-o[1]),d=t.degreesToRadians(i[0]-o[0]),h=t.degreesToRadians(o[1]),u=t.degreesToRadians(i[1]),M=Math.pow(Math.sin(n/2),2)+Math.pow(Math.sin(d/2),2)*Math.cos(h)*Math.cos(u);return t.radiansToLength(2*Math.atan2(Math.sqrt(M),Math.sqrt(1-M)),s.units)}exports.default=a;
},{"@turf/invariant":"ZA2/","@turf/helpers":"il2D"}],"jMik":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("@turf/bbox"),r=require("@turf/helpers");function t(t,u){void 0===u&&(u={});var o=e.default(t),i=(o[0]+o[2])/2,p=(o[1]+o[3])/2;return r.point([i,p],u.properties,u)}exports.default=t;
},{"@turf/bbox":"lhdg","@turf/helpers":"il2D"}],"wjQN":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var e=l(require("@turf/line-intersect")),t=l(require("@turf/line-offset")),n=require("@turf/helpers"),i=l(require("@turf/bbox-polygon")),r=l(require("@turf/boolean-contains")),o=l(require("@turf/bearing")),s=l(require("@turf/destination")),a=l(require("@turf/distance")),u=l(require("@turf/center"));function l(e){return e&&e.__esModule?e:{default:e}}function f(e){return b(e)||c(e)||h()}function h(){throw new TypeError("Invalid attempt to spread non-iterable instance")}function c(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}function b(e){if(Array.isArray(e)){for(var t=0,n=new Array(e.length);t<e.length;t++)n[t]=e[t];return n}}function d(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function g(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}function p(e,t,n){return t&&g(e.prototype,t),n&&g(e,n),e}var v=function(){function l(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:5,t=arguments.length>1?arguments[1]:void 0,n=arguments.length>2?arguments[2]:void 0;d(this,l),this.interval=e,this.bbox=n,this.referenceLine=t,this.lines=[],this.computeDerivedParams()}return p(l,[{key:"computeDerivedParams",value:function(){this.bboxGeojson=(0,i.default)(this.bbox),this.referenceLineGeojson=(0,n.lineString)(this.referenceLine),this.referenceLineBearing=(0,o.default)((0,n.point)(this.referenceLine[0]),(0,n.point)(this.referenceLine[this.referenceLine.length-1])),this.referenceLineBearingInverse=(0,o.default)((0,n.point)(this.referenceLine[this.referenceLine.length-1]),(0,n.point)(this.referenceLine[0])),this.bboxDiagonalLength=1e3*(0,a.default)((0,n.point)([this.bbox[0],this.bbox[1]]),(0,n.point)([this.bbox[2],this.bbox[3]]),{units:"kilometers"})}},{key:"isBiggerThan",value:function(e){return!!(0,r.default)(this.bboxGeojson,(0,i.default)(e))}},{key:"isLineInBbox",value:function(t){return!!(0,r.default)(this.bboxGeojson,t)||(0,e.default)(this.bboxGeojson,t).features.length>0}},{key:"computePerpendicularLine",value:function(e,t,i){var r=(0,n.point)(e),o=(0,s.default)(r,i,t+90,{units:"meters"}),a=(0,s.default)(r,i,t-90,{units:"meters"});return(0,n.lineString)([o.geometry.coordinates,a.geometry.coordinates])}},{key:"expandLine",value:function(t){if((0,e.default)(t,this.bboxGeojson).features.length<2){var i=t.geometry.coordinates,r=[(0,s.default)(i[0],this.bboxDiagonalLength,this.referenceLineBearingInverse,{units:"meters"}).geometry.coordinates].concat(f(i),[(0,s.default)(i[i.length-1],this.bboxDiagonalLength,this.referenceLineBearing,{units:"meters"}).geometry.coordinates]);return(0,n.lineString)(r)}return t}},{key:"generate",value:function(){if(this.isLineInBbox(this.referenceLineGeojson)){this.lines=[];for(var e=this.expandLine(this.referenceLineGeojson),i=[],r=[],o=e,s=(0,t.default)(o,this.interval,{units:"meters"});this.isLineInBbox(s);)i.push(s),o=s,s=(0,t.default)(o,this.interval,{units:"meters"}),s=this.expandLine(s);for(s=(0,t.default)(e,-this.interval,{units:"meters"});this.isLineInBbox(s);)r.push(s),o=s,s=(0,t.default)(o,-this.interval,{units:"meters"}),s=this.expandLine(s);return this.lines=this.lines.concat(r.reverse()),this.lines=this.lines.concat(e),this.lines=this.lines.concat(i),(0,n.featureCollection)(this.lines)}console.log("Error: reference line isn't inside bbox container")}},{key:"getClosestLine",value:function(t){for(var i=this.computePerpendicularLine(t,this.referenceLineBearing,this.bboxDiagonalLength),r=!1,o=0,s=this.lines.length-1,u=this.bboxDiagonalLength,l=this.bboxDiagonalLength,f=null,h=null,c=this.bboxDiagonalLength;!r;)f=(0,e.default)(i,this.lines[o]),h=(0,e.default)(i,this.lines[s]),f.features.length>0&&(u=1e3*(0,a.default)(f.features[0],(0,n.point)(t),{units:"kilometers"})),h.features.length>0&&(l=1e3*(0,a.default)(h.features[0],(0,n.point)(t),{units:"kilometers"})),u>l?(s-o==1?o=s:o+=Math.floor((s-o)/2),o===s&&(c=l,r=!0)):(s-o==1?s=o:s-=Math.floor((s-o)/2),o===s&&(c=u,r=!0));return{index:o,distance:c,line:this.lines[o],perpendicularLine:i}}},{key:"getGeojson",value:function(){return(0,n.featureCollection)(this.lines)}},{key:"update",value:function(e,t){this.bbox=e,this.interval=t,this.generate()}},{key:"updateBbox",value:function(e){var t=(0,u.default)((0,i.default)(e)),n=this.getClosestLine(t.geometry.coordinates);return n?(console.log("Update Bbox and recompute everything"),this.referenceLine=n.line.geometry.coordinates,this.bbox=e,this.computeDerivedParams(),!0):(console.log("Can't update bbox, you moved too far away from previous bbox location, need to have some overlap to be able to compute it"),!1)}}]),l}();exports.default=v;
},{"@turf/line-intersect":"cfYO","@turf/line-offset":"QvRS","@turf/helpers":"il2D","@turf/bbox-polygon":"d4aq","@turf/boolean-contains":"jWcY","@turf/bearing":"1mUN","@turf/destination":"ThDM","@turf/distance":"07Nc","@turf/center":"jMik"}],"A2T1":[function(require,module,exports) {
"use strict";var e=i(require("./guidinglines")),t=i(require("@turf/bbox-polygon"));function i(e){return e&&e.__esModule?e:{default:e}}var o=[-121.415061,40.506229],n=new mapboxgl.Map({container:"map",style:{version:8,sources:{"simple-tiles":{type:"raster",tiles:["http://a.tile.openstreetmap.org/{z}/{x}/{y}.png","http://b.tile.openstreetmap.org/{z}/{x}/{y}.png"],tileSize:256}},layers:[{id:"simple-tiles",type:"raster",source:"simple-tiles",minzoom:0,maxzoom:22}]},center:o,zoom:17});n.on("load",function(){var i=n.getBounds().toArray().flat(),r=(0,t.default)(i),l=new e.default(50,[[-121.418961,40.506229],[-121.412,40.51]],i),a=l.generate(),s=(l.computePerpendicularLine(o,l.referenceLineBearing,l.bboxDiagonalLength),l.getClosestLine(o));n.addSource("helper",{type:"geojson",data:{type:"FeatureCollection",features:[r,{type:"Feature",geometry:{type:"Point",coordinates:o}},s.line]}}),n.addSource("guiding-lines",{type:"geojson",data:a}),n.addLayer({id:"guidinglines",type:"line",source:"guiding-lines",paint:{"line-color":"green","line-width":2},filter:["==","$type","LineString"]}),n.addLayer({id:"bbox-boundary",type:"fill",source:"helper",paint:{"fill-color":"#888888","fill-opacity":.1}}),n.addLayer({id:"position",type:"circle",source:"helper",paint:{"circle-radius":6,"circle-color":"#B42222"},filter:["==","$type","Point"]}),n.addLayer({id:"perpendicularline",type:"line",source:"helper",paint:{"line-color":"blue","line-width":2},filter:["==","$type","LineString"]}),n.on("moveend",function(){console.log("moveend");var e=n.getBounds().toArray().flat();if(!l.isBiggerThan(e)&&(console.log("Update bbox"),l.updateBbox(e))){console.log("Generate guidinglines");var t=l.generate();n.getSource("guiding-lines").setData(t)}console.log("Compute closest line"),o=n.getCenter().toArray();var i=l.getClosestLine(o);n.getSource("helper").setData({type:"FeatureCollection",features:[r,{type:"Feature",geometry:{type:"Point",coordinates:o}},i.line]})}),window.guidingLines=l,window.map=n});
},{"./guidinglines":"wjQN","@turf/bbox-polygon":"d4aq"}]},{},["A2T1"], null)
//# sourceMappingURL=/app.4fc3b011.js.map